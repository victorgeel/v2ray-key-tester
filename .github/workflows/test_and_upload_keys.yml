name: Test V2Ray Keys and Upload to R2 & GitHub

on:
  schedule:
    - cron: '0 * * * *' # Runs at the start of every hour
  workflow_dispatch: # Allows manual triggering

jobs:
  test-and-upload:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          persist-credentials: false

      # 2. Cache Python dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 3. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 4. Install Python dependencies
      - name: Install Python dependencies
        run: pip install -r requirements.txt

      # 5. Run V2Ray Key Tester Script
      - name: Run V2Ray Key Tester Script
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python test_v2ray_keys.py

      # 6. Verify log file existence
      - name: Verify log file existence
        run: |
          if [ -f subscription/job-logs.txt ]; then
            echo "Log file exists: subscription/job-logs.txt"
          else
            echo "Log file does not exist!"
            exit 1
          fi

      # 7. Upload logs for debugging
      - name: Upload logs for debugging
        uses: actions/upload-artifact@v4.6.2
        with:
          name: script-logs
          path: subscription/job-logs.txt

      # 8. Verify subscription directory
      - name: Verify subscription directory
        run: |
          if [ -d "subscription" ]; then
            echo "Subscription directory exists."
          else
            echo "Subscription directory does not exist. Creating it..."
            mkdir subscription
          fi

      # 9. Commit and Push Subscription Files (if changes exist)
      - name: Commit and Push Subscription Files
        run: |
          SUB_DIR="subscription"
          if [ -d "${SUB_DIR}" ]; then
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git add ${SUB_DIR}/*
            git commit -m "Update subscription files [skip ci]" || echo "No changes to commit."
            git push || echo "No changes pushed."
          fi

      # 10. Install Rclone
      - name: Install Rclone
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone

      # 11. Configure Rclone for Cloudflare R2
      - name: Configure Rclone for Cloudflare R2
        env:
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
        run: |
          rclone config create R2 s3 \
            provider=Cloudflare \
            access_key_id=$R2_ACCESS_KEY_ID \
            secret_access_key=$R2_SECRET_ACCESS_KEY \
            endpoint=$R2_ENDPOINT \
            acl=public-read

      # 12. Sync Files to R2 Bucket
      - name: Sync Files to R2 Bucket
        env:
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
        run: |
          if [ -d "subscription" ]; then
            rclone sync subscription R2:${R2_BUCKET_NAME} --progress --verbose
          else
            echo "No subscription directory found. Skipping sync."
          fi

      # 13. Upload Rclone Logs (if generated)
      - name: Upload Rclone Logs
        uses: actions/upload-artifact@v4.6.2
        with:
          name: rclone-logs
          path: rclone.log
        if: always()

      # 14. Clean up workspace
      - name: Clean up workspace
        run: |
          echo "Cleaning up workspace..."
          rm -rf subscription
